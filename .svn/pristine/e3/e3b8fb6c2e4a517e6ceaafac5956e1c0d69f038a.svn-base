CC = gcc
CXX = g++
# CC = icc
# CXX = icpc

ARCH := $(shell uname -m)
SUB_ARCH := $(shell uname -m)

OBJDIR = ../OBJ.$(UNAME)_$(SUB_ARCH)

# icc doesn't support AMD processors
ifeq ($(SUB_ARCH), opetron)
  CC := gcc
  CXX := g++
endif

# Now define COPTS
ifeq ($(CC), icc)
  ifdef DEBUG
    COPTS = -Wall -cxxlib-gcc -g -O0 -vec_report0 -wd1418,858,981,271,1419,810,383,191,1572,279,522,444,869,175,424
  else
     -Wall -cxxlib-gcc -O3 -xBN -static-libcxa -vec_report0 -wd1418,858,981,271,1419,810,383,191,1572,279,522,444,869,177,175,424
  endif
else # gcc
  ifdef DEBUG
    COPTS =  -Wall -W -ggdb3 -fno-strict-aliasing
  else
    #ifeq ($(ARCH), i386)
    #  COPTS = -march=prescott -mtune=pentium-m -mfpmath=sse -msse3
    #endif

    COPTS += -Wall -W -Wno-unused-parameter -Wno-non-virtual-dtor -O3
  endif
endif

ifeq ($(ARCH),i386)
	XLIBDIR = /usr/X11R6/lib
endif

ifeq ($(ARCH),x86_64)
	XLIBDIR = /usr/X11R6/lib64
endif

CXXOPTS = $(COPTS)

INCLUDES += -I/usr/X11R6/include
CFLAGS = $(INCLUDES) $(DEFINES) $(COPTS)
CXXFLAGS = $(INCLUDES) $(DEFINES) $(CXXOPTS)
LDFLAGS = $(LIBDIR) $(LDOPTS)

LIBS = $(DEPLIBS) -lm
XLIBS = -L$(XLIBDIR) -framework OpenGL -framework glut
GLUI_LIBS = -L../../trimesh2/lib.$(TRIMESH_UNAME) -lgluit


$(OBJDIR)/%.o: %.c $(MAKEFILE_DEPS)
	@ echo "Compiling $<"
	@ rm -f "$(@:.o=.d)" && env DEPENDENCIES_OUTPUT="$(@:.o=.d) $@" $(CC) $(CFLAGS) -c $< -o $(OBJDIR)/$@

$(OBJDIR)/%.o: %.cc $(MAKEFILE_DEPS)
	@ echo "Compiling $<"
	rm -f "$(@:.o=.d)" && env DEPENDENCIES_OUTPUT="$(OBJDIR)/$(@:.o=.d) $@" $(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/$@


define LINK
	@ echo "Linking $@"
	@ rm -f $@
	@ $(CXX) $(CXXFLAGS) -o $@ $(OBJDIR)/$(notdir $@).o $(LDFLAGS) $(LIBS)
endef

first_rule: all

-include $(OBJDIR)/*.d
